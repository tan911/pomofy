// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

enum Status {
  Todo
  Inprogress
  Completed
}

enum Priority {
  High
  Normal
  Low
}

model User {
  id            String    @id @default(cuid())
  name          String    @db.VarChar(45)
  email         String    @unique
  password      String?
  emailVerified Boolean   @default(false) @map("email_verified")
  sessions      Session[]
  Task          Task[]
}

model VerificationCode {
  id        String @id @default(cuid())
  code      String
  userId    String @unique @map("user_id")
  email     String @unique
  expiresAt String @map("expires_at")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Task {
  id          String   @id @default(cuid())
  taskId      String
  title       String
  description String
  date        DateTime @map("task_due_date")
  status      Status   @default(Todo)
  priority    Priority @default(Normal)
  user        User     @relation(references: [id], fields: [taskId], onDelete: Cascade)
}
